# Generated by Django 4.0.4 on 2022-12-14 12:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rest_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketMakingPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=42)),
                ('controller_wallet', models.CharField(max_length=42)),
                ('version', models.CharField(default='1.0', max_length=5)),
                ('live', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paired_token', models.CharField(max_length=42)),
                ('paired_token_image', models.URLField(blank=True, default='', max_length=400)),
                ('paired_token_ticker', models.CharField(max_length=8)),
                ('network', models.CharField(choices=[('4', 'Rinkeby Test Network'), ('5', 'Goerli Test Network'), ('56', 'Binance Smart Chain')], default='4', max_length=100)),
                ('algo_id', models.IntegerField(blank=True, null=True)),
                ('volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('lower_preferred_price_range', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('upper_preferred_price_range', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_selling_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_buying_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_preferred_drawdown', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('slug', models.SlugField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('token', models.CharField(max_length=42)),
                ('ticker', models.CharField(max_length=8)),
                ('live', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('website', models.URLField(blank=True, default='', max_length=400)),
                ('whitepaper', models.URLField(blank=True, default='', max_length=400)),
                ('audit', models.URLField(blank=True, default='', max_length=400)),
                ('image', models.ImageField(blank=True, null=True, upload_to=rest_api.models.upload_to)),
                ('banner', models.ImageField(blank=True, null=True, upload_to=rest_api.models.upload_to)),
                ('signature_id', models.CharField(blank=True, default='', max_length=64)),
                ('signed_contract', models.BooleanField(default=False)),
                ('networks', models.JSONField(blank=True, default=list, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('social_linkedin', models.URLField(blank=True, default='', max_length=400)),
                ('social_facebook', models.URLField(blank=True, default='', max_length=400)),
                ('social_github', models.URLField(blank=True, default='', max_length=400)),
                ('social_telegram', models.URLField(blank=True, default='', max_length=400)),
                ('social_discord', models.URLField(blank=True, default='', max_length=400)),
                ('social_medium', models.URLField(blank=True, default='', max_length=400)),
                ('social_twitter', models.URLField(blank=True, default='', max_length=400)),
                ('contact_name', models.CharField(blank=True, default='', max_length=100)),
                ('contact_email', models.CharField(blank=True, default='', max_length=100)),
                ('contact_phone', models.CharField(blank=True, default='', max_length=15)),
                ('contact_telegram', models.CharField(blank=True, default='', max_length=32)),
                ('contact_company', models.CharField(blank=True, default='', max_length=100)),
                ('contact_street', models.CharField(blank=True, default='', max_length=100)),
                ('contact_city', models.CharField(blank=True, default='', max_length=32)),
                ('contact_state', models.CharField(blank=True, default='', max_length=32)),
                ('contact_postal', models.CharField(blank=True, default='', max_length=32)),
                ('contact_country', models.CharField(blank=True, default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('address', models.CharField(max_length=42, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nonce', models.CharField(blank=True, default='', max_length=42)),
                ('country', models.CharField(blank=True, default='', max_length=30)),
            ],
            options={
                'verbose_name_plural': 'UserAddresses',
            },
        ),
        migrations.CreateModel(
            name='VestingBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=42)),
                ('name', models.CharField(max_length=200)),
                ('start', models.IntegerField()),
                ('cliff', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('slice', models.IntegerField()),
                ('revocable', models.BooleanField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='VestingBatch_of_project', to='rest_api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Vesting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_making_pool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Vesting_of_market_making_pool', to='rest_api.marketmakingpool')),
                ('user_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Vesting_of_user_address', to='rest_api.useraddress')),
                ('vesting_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Vesting_of_vesting_batch', to='rest_api.vestingbatch')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.CharField(max_length=42)),
                ('type', models.CharField(choices=[('VD', 'Vault Deposit'), ('VW', 'Vault Withdrawal'), ('VE', 'Vault Exit'), ('VR', 'Vault Rewards'), ('VA', 'Vault Reward Adding'), ('LMD', 'Liquidity Maker LP Deposit'), ('LMB', 'Liquidity Maker Base Deposit'), ('LMP', 'Liquidity Maker Paired Deposit'), ('LMW', 'Liquidity Maker Withdrawal'), ('LME', 'Liquidity Maker Exit'), ('LMA', 'Liquidity Maker Reward Adding'), ('LMR', 'Liquidity Maker Rewards Claiming'), ('LMC', 'Liquidity Maker Liquidity Compound'), ('LML', 'Liquidity Maker Liquidity Reward Adding'), ('MMBD', 'Market Making Base Deposit'), ('MMPD', 'Market Making Paired Deposit'), ('MMBB', 'Market Making Base Batch'), ('MMVD', 'Market Making Vesting Deposit'), ('MMVR', 'Market Making Vesting Release'), ('MMVA', 'Market Making Vesting Automated Release'), ('MMRT', 'Market Making Revoke Tokens'), ('MMBW', 'Market Making Base Withdrawal'), ('MMPW', 'Market Making Paired Withdrawal'), ('MMAS', 'Market Making Allow Selling'), ('MMAR', 'Market Making Allow Releasing'), ('MMBR', 'Market Making Base Staking Ratio'), ('MMPR', 'Market Making Paired Staking Ratio'), ('MMCD', 'Market Making Contract Deployment')], max_length=30)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15)),
                ('value', models.CharField(blank=True, default='', max_length=30)),
                ('hash', models.CharField(blank=True, default='', max_length=66)),
                ('network', models.CharField(choices=[('4', 'Rinkeby Test Network'), ('5', 'Goerli Test Network'), ('56', 'Binance Smart Chain')], default='4', max_length=100)),
                ('full_withdrawal', models.BooleanField(default=False)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Transaction_of_project', to='rest_api.project')),
                ('user_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Transaction_of_user_address', to='rest_api.useraddress')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='admin',
            field=models.ManyToManyField(blank=True, related_name='Project_of_admin', to='rest_api.useraddress'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Project_of_owner', to='rest_api.useraddress'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=140)),
                ('body', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Message_of_project', to='rest_api.project')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Message_of_recipient', to='rest_api.useraddress')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Message_of_sender', to='rest_api.useraddress')),
            ],
        ),
        migrations.AddField(
            model_name='marketmakingpool',
            name='invested',
            field=models.ManyToManyField(blank=True, related_name='MarketMakingPool_of_invested', to='rest_api.useraddress'),
        ),
        migrations.AddField(
            model_name='marketmakingpool',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='MarketMakingPool_of_project', to='rest_api.project'),
        ),
        migrations.AddField(
            model_name='marketmakingpool',
            name='vested',
            field=models.ManyToManyField(blank=True, related_name='MarketMakingPool_of_vested', through='rest_api.Vesting', to='rest_api.useraddress'),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('image', models.ImageField(blank=True, null=True, upload_to=rest_api.models.upload_to)),
                ('link', models.URLField(blank=True, default='', max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Article_of_project', to='rest_api.project')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=42)),
                ('version', models.CharField(default='1.0', max_length=5)),
                ('live', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('network', models.CharField(choices=[('4', 'Rinkeby Test Network'), ('5', 'Goerli Test Network'), ('56', 'Binance Smart Chain')], default='4', max_length=100)),
                ('invested', models.ManyToManyField(blank=True, related_name='Vault_of_invested', to='rest_api.useraddress')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Vault_of_project', to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'network', 'version')},
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_making_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], default='sell', max_length=10)),
                ('buy_sell_pressure', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('price_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('trading_until', models.DateTimeField(blank=True, null=True)),
                ('allow_selling', models.BooleanField(default=False)),
                ('allow_releasing', models.BooleanField(default=False)),
                ('algo_id', models.IntegerField(blank=True, null=True)),
                ('market_making_pool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='UserSettings_of_market_making_pool', to='rest_api.marketmakingpool')),
                ('user_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='UserSettings_of_user_address', to='rest_api.useraddress')),
            ],
            options={
                'verbose_name_plural': 'UsersSettings',
                'unique_together': {('market_making_pool', 'user_address')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='marketmakingpool',
            unique_together={('project', 'network', 'version')},
        ),
        migrations.CreateModel(
            name='LiquidityMaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=42)),
                ('paired_token', models.CharField(max_length=42)),
                ('paired_token_image', models.URLField(blank=True, default='', max_length=400)),
                ('paired_token_ticker', models.CharField(max_length=8)),
                ('pair_address', models.CharField(max_length=42)),
                ('version', models.CharField(default='1.0', max_length=5)),
                ('live', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('network', models.CharField(choices=[('4', 'Rinkeby Test Network'), ('5', 'Goerli Test Network'), ('56', 'Binance Smart Chain')], default='4', max_length=100)),
                ('invested', models.ManyToManyField(blank=True, related_name='LiquidityMaker_of_invested', to='rest_api.useraddress')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='LiquidityMaker_of_project', to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'network', 'version')},
            },
        ),
    ]
